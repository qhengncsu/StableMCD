Sigma = matrix(0,5,5)
for(i in 1:5){
  for(j in 1:5){
    Sigma[i,j] = 0.35^abs(i-j)
  }
}
library(MultiRNG)
X = draw.d.variate.normal(1000,5,rep(0,5),Sigma)
beta = rep(1,5)
y = X%*%beta + rnorm(1000)
y[1:150] = y[1:150]+10
for(i in 151:300){
  j = sample(1:5,1)
  X[i,j] = X[i,j]+10
}

bootstrap_result = bootstrap_lts(X,y,seq(0.5,0.975,by=0.025))

#result = bootstrap_lts(X,y,seq(0.5,0.99,by=0.01))



library(MASS)
n = 1000
p = 5
ntrials = rep(100,n)
Sigma = matrix(0,nrow=p,ncol=p)
for(i in 1:p){
  for(j in 1:p){
    Sigma[i,j] <- 0.35^abs(i-j)
  }
}

X = mvrnorm(n, rep(0,p), Sigma)
beta0 = rep(0.2,5)


noutlier = 200
theta0 = 1/(1+exp(-X%*%beta0))
y = rbinom(n,ntrials,theta0)
X_with_intercept = cbind(rep(1,1000),X)

res1 = irls_glm(X_with_intercept,y/ntrials,ntrials,"binomial")
beta1 = res1$coefficients
res2 = glm.fit(X_with_intercept,y/ntrials,weights = ntrials,family=binomial())
beta2 = res2$coefficients


theta0 = exp(X%*%beta0)
y = rpois(n,theta0)
y[1:150] = y[1:150]+30
X[151:300,1] = X[151:300,1]+30

res1 = irls_glm(X_with_intercept,y,rep(1,n),"poisson")
beta1 = res1$coefficients
res2 = glm.fit(X_with_intercept,y,family=poisson())
beta2 = res2$coefficients

y[1:noutlier] = y[1:noutlier]+30
y = ifelse(y<ntrials,y,ntrials)
X[201:300,1] = X[201:300,1]+30

result = trimmed_glm(X,y/ntrials,c(0.7,0.8,0.85),"binomial",ntrials)
result = trimmed_glm(X,y,c(0.6,0.7,0.75),"poisson",rep(1,n))

result = bootstrap_glm(X,y,seq(0.5,0.95,by=0.025),"poisson",rep(1,n))
result = bootstrap_glm(X,y/ntrials,seq(0.5,0.95,by=0.025),"binomial",ntrials)
